{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D3\\u05E0\\u05D9\\u05D0\\u05DC\\u05D4\\\\Desktop\\\\web project\\\\webP\\\\client\\\\src\\\\components\\\\Map.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { DispatchContext, StateContext } from \"../context/GlobalContext\";\nimport { useTheme } from \"styled-components\";\nimport { mapStyles } from \"../globalStyles\";\nimport MapInfoWindow from \"./MapInfoWindow\";\nimport GoogleMapReact from \"google-map-react\";\nimport styled from \"styled-components\";\nimport { ImLocation } from \"react-icons/im\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapMarker = styled.div`\n  position: absolute;\n  transform: translate(-50%, -50%);\n  color: #3f51b5;\n\n  svg {\n    width: 1.5rem;\n    height: 1.5rem;\n    cursor: pointer;\n    text-align: center;\n  }\n`;\n_c = MapMarker;\n\nconst MapContainer = () => {\n  _s();\n\n  const theme = useTheme();\n  const history = useHistory();\n  const dispatch = useContext(DispatchContext);\n  const state = useContext(StateContext);\n  const {\n    homes\n  } = state.homesList;\n  const [showInfoWindow, setShowInfoWindow] = useState(false);\n  const [selectedPlace, setSelectedPlace] = useState({});\n  const [mapStyle, setMapStyle] = useState(mapStyles.dark);\n  const location = {\n    lng: -122.85,\n    lat: 49.183333\n  };\n  useEffect(() => {\n    setMapStyle(theme.name === \"dark\" ? mapStyles.dark : mapStyles.light);\n  }, [theme]);\n\n  const markerClicked = home => {\n    setSelectedPlace(home);\n    setShowInfoWindow(true);\n    dispatch({\n      type: \"SET_SELECTEDITEM\",\n      payload: home\n    });\n  };\n\n  const closeInfoWindow = () => {\n    setSelectedPlace(null);\n    setShowInfoWindow(false);\n    dispatch({\n      type: \"REMOVE_SELECTEDITEM\"\n    });\n  };\n\n  const createMapOptions = () => ({\n    styles: mapStyle\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: process.env.REACT_APP_GOOGLE_MAP_API\n      },\n      defaultCenter: location,\n      defaultZoom: 12,\n      onClick: closeInfoWindow,\n      options: createMapOptions,\n      children: homes.map(home => /*#__PURE__*/_jsxDEV(MapMarker, {\n        onClick: () => markerClicked(home),\n        lat: home.position.lat,\n        lng: home.position.lng,\n        children: [showInfoWindow && selectedPlace._id === home._id && /*#__PURE__*/_jsxDEV(MapInfoWindow, {\n          selectedPlace: selectedPlace,\n          history: history,\n          closeInfoWindow: closeInfoWindow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImLocation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, home._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, mapStyle, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MapContainer, \"xKAcYTkdonI9Kz4PRZ9IEsn5myo=\", false, function () {\n  return [useTheme, useHistory];\n});\n\n_c2 = MapContainer;\nexport default MapContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MapMarker\");\n$RefreshReg$(_c2, \"MapContainer\");","map":{"version":3,"names":["useState","useEffect","useContext","useHistory","DispatchContext","StateContext","useTheme","mapStyles","MapInfoWindow","GoogleMapReact","styled","ImLocation","MapMarker","div","MapContainer","theme","history","dispatch","state","homes","homesList","showInfoWindow","setShowInfoWindow","selectedPlace","setSelectedPlace","mapStyle","setMapStyle","dark","location","lng","lat","name","light","markerClicked","home","type","payload","closeInfoWindow","createMapOptions","styles","width","height","key","process","env","REACT_APP_GOOGLE_MAP_API","map","position","_id"],"sources":["C:/Users/דניאלה/Desktop/web project/webP/client/src/components/Map.js"],"sourcesContent":["import { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DispatchContext, StateContext } from \"../context/GlobalContext\";\r\nimport { useTheme } from \"styled-components\";\r\nimport { mapStyles } from \"../globalStyles\";\r\nimport MapInfoWindow from \"./MapInfoWindow\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport styled from \"styled-components\";\r\nimport { ImLocation } from \"react-icons/im\";\r\n\r\n\r\nconst MapMarker = styled.div`\r\n  position: absolute;\r\n  transform: translate(-50%, -50%);\r\n  color: #3f51b5;\r\n\r\n  svg {\r\n    width: 1.5rem;\r\n    height: 1.5rem;\r\n    cursor: pointer;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst MapContainer = () => {\r\n  const theme = useTheme();\r\n  const history = useHistory();\r\n  const dispatch = useContext(DispatchContext);\r\n  const state = useContext(StateContext);\r\n  const { homes } = state.homesList;\r\n  const [showInfoWindow, setShowInfoWindow] = useState(false);\r\n  const [selectedPlace, setSelectedPlace] = useState({});\r\n  const [mapStyle, setMapStyle] = useState(mapStyles.dark);\r\n\r\n  const location = {\r\n    lng: -122.85,\r\n    lat: 49.183333,\r\n  };\r\n\r\n   useEffect(() => {\r\n    setMapStyle(theme.name === \"dark\" ? mapStyles.dark : mapStyles.light);\r\n  }, [theme]); \r\n\r\n\r\n\r\n  const markerClicked = (home) => {\r\n    setSelectedPlace(home);\r\n    setShowInfoWindow(true);\r\n    dispatch({ type: \"SET_SELECTEDITEM\", payload: home });\r\n  };\r\n\r\n  const closeInfoWindow = () => {\r\n    setSelectedPlace(null);\r\n    setShowInfoWindow(false);\r\n    dispatch({ type: \"REMOVE_SELECTEDITEM\" });\r\n  };\r\n\r\n  const createMapOptions =()=>({\r\n    styles: mapStyle\r\n  })\r\n\r\n  return (\r\n    <div key={mapStyle} style={{ width: \"100%\", height: \"100%\" }}>\r\n      <GoogleMapReact\r\n        bootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_MAP_API }}\r\n        defaultCenter={location}\r\n        defaultZoom={12}\r\n        onClick={closeInfoWindow}\r\n        options={createMapOptions}\r\n      >\r\n        {homes.map((home) => (\r\n          <MapMarker\r\n            onClick={() => markerClicked(home)}\r\n            lat={home.position.lat}\r\n            lng={home.position.lng}\r\n            key={home._id}\r\n          >\r\n            {showInfoWindow && selectedPlace._id === home._id && (\r\n              <MapInfoWindow\r\n                selectedPlace={selectedPlace}\r\n                history={history}\r\n                closeInfoWindow={closeInfoWindow}\r\n              />\r\n            )}\r\n            <ImLocation />\r\n          </MapMarker>\r\n        ))}\r\n      </GoogleMapReact>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapContainer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}